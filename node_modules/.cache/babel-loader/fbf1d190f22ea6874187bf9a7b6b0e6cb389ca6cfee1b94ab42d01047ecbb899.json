{"ast":null,"code":"var _jsxFileName = \"/Users/paridhipande/Desktop/netflix-clone/src/screens/PlansScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport db from \"../firebase\";\nimport './PlansScreen.css';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../features/counter/userSlice';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlansScreen() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const user = useSelector(selectUser);\n  const [subscriptions, setSubscriptions] = useState(null);\n  useEffect(() => {\n    db.collection('customers').doc(user.uid).collection('subscriptions').get().then(querySnapshot => {\n      querySnapshot.forEach(async subscriptions => {\n        setSubscriptions({\n          role: subscriptions.data().role,\n          current_period_end: subscriptions.data().current_period_end.seconds,\n          current_period_start: subscriptions.data().current_period_start.seconds\n        });\n      });\n    });\n  }, [user.uid]);\n  useEffect(() => {\n    db.collection('products').where('active', '==', true).get().then(querySnapshot => {\n      const products = {};\n      querySnapshot.forEach(async productDoc => {\n        products[productDoc.id] = productDoc.data();\n        const priceSnap = await productDoc.ref.collection('prices').get();\n        priceSnap.docs.forEach(price => {\n          products[productDoc.id].prices = {\n            priceId: price.id,\n            priceData: price.data()\n          };\n        });\n      });\n      setProducts(products);\n    });\n  }, []);\n  console.log(products);\n  console.log(subscriptions);\n  const loadCheckout = async priceId => {\n    const docRef = await db.collection('customers').doc(user.uid).collection(\"checkout_sessions\").add({\n      price: priceId,\n      success_url: window.location.origin,\n      cancel_url: window.location.origin\n    });\n    docRef.onSnapshot(async snap => {\n      const {\n        error,\n        sessionId\n      } = snap.data();\n      if (error) {\n        alert(`An error occurred: ${error.message}`);\n      }\n      if (sessionId) {\n        const stripe = await loadStripe(\"pk_test_51N8VUfJSA252XYBeDOTH0XBWl3l6rgjxl8ZHVewz1DDA5iCRYcPdvO264F2q77NFQPbUleRNni82Lt6els0Rup1D00io29zoq7\");\n        stripe.redirectToCheckout({\n          sessionId\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plansScreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), subscriptions && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Renewal Date: \", new Date((subscriptions === null || subscriptions === void 0 ? void 0 : subscriptions.current_period_end) * 1000).toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), Object.entries(products).map(_ref => {\n      var _productData$name;\n      let [productId, productData] = _ref;\n      // add some logic to check if user subscriptions is active\n      const isCurrentPackage = (_productData$name = productData.name) === null || _productData$name === void 0 ? void 0 : _productData$name.toLowerCase().includes(subscriptions === null || subscriptions === void 0 ? void 0 : subscriptions.role);\n      console.log(isCurrentPackage);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${isCurrentPackage && \"plansScreen__plan--disabled\"} plansScreen__plan`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plansScreen__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: productData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: productData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => !isCurrentPackage && loadCheckout(productData.prices.priceId),\n          children: isCurrentPackage ? 'Current Package' : 'Subscribe'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, productId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(PlansScreen, \"nuI10e7Jxez8jRw5DjMsHJD1SRo=\", false, function () {\n  return [useSelector];\n});\n_c = PlansScreen;\nexport default PlansScreen;\nvar _c;\n$RefreshReg$(_c, \"PlansScreen\");","map":{"version":3,"names":["React","useEffect","useState","db","useSelector","selectUser","loadStripe","jsxDEV","_jsxDEV","PlansScreen","_s","products","setProducts","user","subscriptions","setSubscriptions","collection","doc","uid","get","then","querySnapshot","forEach","role","data","current_period_end","seconds","current_period_start","where","productDoc","id","priceSnap","ref","docs","price","prices","priceId","priceData","console","log","loadCheckout","docRef","add","success_url","window","location","origin","cancel_url","onSnapshot","snap","error","sessionId","alert","message","stripe","redirectToCheckout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleDateString","Object","entries","map","_ref","_productData$name","productId","productData","isCurrentPackage","name","toLowerCase","includes","description","onClick","_c","$RefreshReg$"],"sources":["/Users/paridhipande/Desktop/netflix-clone/src/screens/PlansScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport db from \"../firebase\";\nimport './PlansScreen.css';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../features/counter/userSlice';\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nfunction PlansScreen() {\n    const [products, setProducts] = useState([]);\n    const user = useSelector(selectUser);\n    const [subscriptions, setSubscriptions] = useState(null);\n\n    useEffect(() => {\n        db.collection('customers').doc(user.uid).collection('subscriptions').get().then(querySnapshot => {\n            querySnapshot.forEach(async subscriptions => {\n                setSubscriptions({\n                    role:subscriptions.data().role,\n                    current_period_end: subscriptions.data().current_period_end.seconds,\n                    current_period_start: subscriptions.data().current_period_start.seconds\n                });\n            });\n        });\n    }, [user.uid]);\n\n    useEffect(() => {\n        db.collection('products').where('active', '==', true).get().then((querySnapshot) => {\n            const products = {};\n            querySnapshot.forEach(async productDoc => {\n                products[productDoc.id] = productDoc.data();\n                const priceSnap = await productDoc.ref.collection('prices').get();\n                priceSnap.docs.forEach(price => {\n                    products[productDoc.id].prices = {\n                        priceId: price.id,\n                        priceData: price.data()\n                    };\n                });\n            });\n            setProducts(products);\n        });\n    }, []);\n\n    console.log(products);\n    console.log(subscriptions);\n\n    const loadCheckout = async (priceId) => {\n        const docRef = await db.collection('customers').doc(user.uid).collection(\"checkout_sessions\").add({\n            price: priceId,\n            success_url: window.location.origin,\n            cancel_url: window.location.origin\n        });\n\n        docRef.onSnapshot(async (snap) => {\n            const { error, sessionId } = snap.data();\n\n            if (error) {\n                alert(`An error occurred: ${error.message}`);\n            }\n\n            if (sessionId) {\n                const stripe = await loadStripe(\"pk_test_51N8VUfJSA252XYBeDOTH0XBWl3l6rgjxl8ZHVewz1DDA5iCRYcPdvO264F2q77NFQPbUleRNni82Lt6els0Rup1D00io29zoq7\");\n                stripe.redirectToCheckout({ sessionId });\n            }\n        });\n    };\n\n    return (\n        <div className='plansScreen'>\n        <br />\n            {subscriptions && (\n                <p>\n                    Renewal Date: {new Date(subscriptions?.current_period_end * 1000).toLocaleDateString()}\n                </p>\n            )}\n            {Object.entries(products).map(([productId, productData]) => {\n                // add some logic to check if user subscriptions is active\n                const isCurrentPackage = productData.name?.toLowerCase().includes(subscriptions?.role);\n                console.log(isCurrentPackage);\n                return (\n                    <div\n  key={productId}\n  className={`${isCurrentPackage && \"plansScreen__plan--disabled\"} plansScreen__plan`}\n>\n                        <div className='plansScreen__info'>\n                            <h5>{productData.name}</h5>\n                            <h6>{productData.description}</h6>\n                        </div>\n                        <button onClick={() => !isCurrentPackage && loadCheckout(productData.prices.priceId)}>\n                            {isCurrentPackage ? 'Current Package' : 'Subscribe'}\n                        </button>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\nexport default PlansScreen;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}