{"ast":null,"code":"var _jsxFileName = \"/Users/paridhipande/Desktop/netflix-clone/src/screens/PlansScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport db from \"../firebase\";\nimport './PlansScreen.css';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../features/counter/userSlice';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlansScreen() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const user = useSelector(selectUser);\n  const [subscriptions, setSubscriptions] = useState(null);\n  useEffect(() => {\n    db.collection('customers').doc(user.uid).collection('subscriptions').get().then(querySnapshot => {\n      querySnapshot.forEach(async subscriptions => {\n        setSubscriptions({\n          role: subscriptions.data().role,\n          current_period_end: subscriptions.data().current_period_end.seconds,\n          current_period_start: subscriptions.data().current_period_start.seconds\n        });\n      });\n    });\n  }, []);\n  useEffect(() => {\n    db.collection('products').where('active', '==', true).get().then(querySnapshot => {\n      const products = {};\n      querySnapshot.forEach(async productDoc => {\n        products[productDoc.id] = productDoc.data();\n        const priceSnap = await productDoc.ref.collection('prices').get();\n        priceSnap.docs.forEach(price => {\n          products[productDoc.id].prices = {\n            priceId: price.id,\n            priceData: price.data()\n          };\n        });\n      });\n      setProducts(products);\n    });\n  }, []);\n  console.log(products);\n  console.log(subscriptions);\n  const loadCheckout = async priceId => {\n    const docRef = await db.collection('customers').doc(user.uid).collection(\"checkout_sessions\").add({\n      price: priceId,\n      success_url: window.location.origin,\n      cancel_url: window.location.origin\n    });\n    docRef.onSnapshot(async snap => {\n      const {\n        error,\n        sessionId\n      } = snap.data();\n      if (error) {\n        alert(`An error occired: ${error.message}`);\n      }\n      if (sessionId) {\n        const stripe = await loadStripe(\"pk_test_51N8VUfJSA252XYBeDOTH0XBWl3l6rgjxl8ZHVewz1DDA5iCRYcPdvO264F2q77NFQPbUleRNni82Lt6els0Rup1D00io29zoq7\");\n        stripe.redirectToCheckout({\n          sessionId\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plansScreen\",\n    children: Object.entries(products).map(_ref => {\n      var _productData$name;\n      let [productId, productData] = _ref;\n      // add some logic to check if user subscriptions is active\n      const isCurrentPackage = (_productData$name = productData.name) === null || _productData$name === void 0 ? void 0 : _productData$name.toLowerCase().includes(subscriptions === null || subscriptions === void 0 ? void 0 : subscriptions.role);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plansScreen__plan\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plansScreen__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: productData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: productData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => !isCurrentPackage && loadCheckout(productData.prices.priceId),\n          children: isCurrentPackage ? 'Current Pakcage' : 'Subscribe'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(PlansScreen, \"NBwJVZmptL3gDEf74J/au/glzMs=\", false, function () {\n  return [useSelector];\n});\n_c = PlansScreen;\nexport default PlansScreen;\nvar _c;\n$RefreshReg$(_c, \"PlansScreen\");","map":{"version":3,"names":["React","useEffect","useState","db","useSelector","selectUser","loadStripe","jsxDEV","_jsxDEV","PlansScreen","_s","products","setProducts","user","subscriptions","setSubscriptions","collection","doc","uid","get","then","querySnapshot","forEach","role","data","current_period_end","seconds","current_period_start","where","productDoc","id","priceSnap","ref","docs","price","prices","priceId","priceData","console","log","loadCheckout","docRef","add","success_url","window","location","origin","cancel_url","onSnapshot","snap","error","sessionId","alert","message","stripe","redirectToCheckout","className","children","Object","entries","map","_ref","_productData$name","productId","productData","isCurrentPackage","name","toLowerCase","includes","fileName","_jsxFileName","lineNumber","columnNumber","description","onClick","_c","$RefreshReg$"],"sources":["/Users/paridhipande/Desktop/netflix-clone/src/screens/PlansScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport db from \"../firebase\"\nimport './PlansScreen.css'\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../features/counter/userSlice';\nimport { loadStripe } from \"@stripe/stripe-js\"\n\nfunction PlansScreen() {\n    const [products, setProducts] = useState([]);\n    const user = useSelector(selectUser);\n    const[subscriptions,setSubscriptions]= useState(null);\n    useEffect(() => {\n        db.collection('customers').doc(user.uid).collection('subscriptions').get().then(querySnapshot => {\n            querySnapshot.forEach(async subscriptions => {\n                setSubscriptions({\n                    role:subscriptions.data().role,\n                    current_period_end : subscriptions.data().current_period_end.seconds,\n                    current_period_start : subscriptions.data().current_period_start.seconds,\n\n\n                })\n            \n            \n            })})\n\n\n    },[])\n\n    useEffect(() => {\n        db.collection('products').where('active', '==',true).get().then((querySnapshot) => {\n            const products = {};\n            querySnapshot.forEach(async productDoc => {\n                products[productDoc.id] = productDoc.data();\n                const priceSnap = await productDoc.ref.collection('prices').get();\n                priceSnap.docs.forEach(price => {\n                    products[productDoc.id].prices = {\n                        priceId: price.id,\n                        priceData: price.data(),\n\n                    \n                };\n            });\n        });\n        setProducts(products);\n    });\n},[]);\nconsole.log(products);\nconsole.log(subscriptions);\nconst loadCheckout = async(priceId) => {\n    const docRef =  await db.collection('customers').doc(user.uid).collection(\"checkout_sessions\").add({\n        price: priceId,\n        success_url: window.location.origin,\n        cancel_url:window.location.origin,\n    });\n    docRef.onSnapshot(async(snap) => {\n        const {error, sessionId} = snap.data();\n        if(error){\n            alert(`An error occired: ${error.message}`);\n        }\n        if(sessionId){\n            const stripe = await loadStripe(\"pk_test_51N8VUfJSA252XYBeDOTH0XBWl3l6rgjxl8ZHVewz1DDA5iCRYcPdvO264F2q77NFQPbUleRNni82Lt6els0Rup1D00io29zoq7\");\n            stripe.redirectToCheckout({sessionId});\n        }\n\n    });\n};\n\n     \n  return (\n    <div className='plansScreen'>\n    {Object.entries(products).map(([productId,productData]) => {\n        // add some logic to check if user subscriptions is active\n        const isCurrentPackage = productData.name?.toLowerCase().includes(subscriptions?.role);\n        return(\n            <div className='plansScreen__plan'>\n            <div className = 'plansScreen__info'>\n                <h5>{productData.name}</h5>\n                <h6>{productData.description}</h6>\n            </div>\n            <button onClick ={() => !isCurrentPackage && loadCheckout(productData.prices.priceId)}>\n                {isCurrentPackage ? 'Current Pakcage' : 'Subscribe'}\n            </button>\n\n            </div>\n        );\n    }\n    )}\n\n    </div>\n  )\n}\n\nexport default PlansScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}