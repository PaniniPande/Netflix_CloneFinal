{"ast":null,"code":"var _jsxFileName = \"/Users/paridhipande/Desktop/netflix-clone/src/screens/PlansScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlansScreen() {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    db.collection('products').where('active', '==', true).get().then(querySnapshot => {\n      const updatedProducts = {};\n      querySnapshot.forEach(async productDoc => {\n        const priceSnap = await productDoc.ref.collection('prices').get();\n        const prices = {};\n        priceSnap.docs.forEach(price => {\n          prices[price.id] = price.data();\n        });\n        updatedProducts[productDoc.id] = {\n          ...productDoc.data(),\n          prices: prices\n        };\n      });\n      setProducts(updatedProducts);\n    }).catch(error => {\n      console.log('Error getting products: ', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plansScreen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n_s(PlansScreen, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = PlansScreen;\nexport default PlansScreen;\nvar _c;\n$RefreshReg$(_c, \"PlansScreen\");","map":{"version":3,"names":["React","useEffect","useState","db","jsxDEV","_jsxDEV","PlansScreen","_s","products","setProducts","collection","where","get","then","querySnapshot","updatedProducts","forEach","productDoc","priceSnap","ref","prices","docs","price","id","data","catch","error","console","log","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/paridhipande/Desktop/netflix-clone/src/screens/PlansScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from '../firebase';\n\n\nfunction PlansScreen() {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    db.collection('products')\n      .where('active', '==', true)\n      .get()\n      .then((querySnapshot) => {\n        const updatedProducts = {};\n        querySnapshot.forEach(async (productDoc) => {\n          const priceSnap = await productDoc.ref.collection('prices').get();\n          const prices = {};\n          priceSnap.docs.forEach((price) => {\n            prices[price.id] = price.data();\n          });\n\n          updatedProducts[productDoc.id] = {\n            ...productDoc.data(),\n            prices: prices,\n          };\n        });\n\n        setProducts(updatedProducts);\n      })\n\n      .catch((error) => {\n        console.log('Error getting products: ', error);\n      });\n  }, []);\n\n  return <div className='plansScreen'>{/* Render the plans using the products state */}</div>;\n}\n\nexport default PlansScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdE,EAAE,CAACO,UAAU,CAAC,UAAU,CAAC,CACtBC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAC3BC,GAAG,CAAC,CAAC,CACLC,IAAI,CAAEC,aAAa,IAAK;MACvB,MAAMC,eAAe,GAAG,CAAC,CAAC;MAC1BD,aAAa,CAACE,OAAO,CAAC,MAAOC,UAAU,IAAK;QAC1C,MAAMC,SAAS,GAAG,MAAMD,UAAU,CAACE,GAAG,CAACT,UAAU,CAAC,QAAQ,CAAC,CAACE,GAAG,CAAC,CAAC;QACjE,MAAMQ,MAAM,GAAG,CAAC,CAAC;QACjBF,SAAS,CAACG,IAAI,CAACL,OAAO,CAAEM,KAAK,IAAK;UAChCF,MAAM,CAACE,KAAK,CAACC,EAAE,CAAC,GAAGD,KAAK,CAACE,IAAI,CAAC,CAAC;QACjC,CAAC,CAAC;QAEFT,eAAe,CAACE,UAAU,CAACM,EAAE,CAAC,GAAG;UAC/B,GAAGN,UAAU,CAACO,IAAI,CAAC,CAAC;UACpBJ,MAAM,EAAEA;QACV,CAAC;MACH,CAAC,CAAC;MAEFX,WAAW,CAACM,eAAe,CAAC;IAC9B,CAAC,CAAC,CAEDU,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;IAChD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOrB,OAAA;IAAKwB,SAAS,EAAC;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuD,CAAC;AAC7F;AAAC1B,EAAA,CA/BQD,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAiCpB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}