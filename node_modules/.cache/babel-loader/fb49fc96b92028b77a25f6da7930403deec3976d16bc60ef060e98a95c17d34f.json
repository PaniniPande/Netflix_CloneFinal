{"ast":null,"code":"var _jsxFileName = \"/Users/paridhipande/Desktop/netflix-clone/src/screens/PlansScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport db from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlansScreen() {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const querySnapshot = await db.collection('products').where('active', '==', true).get();\n        const promises = querySnapshot.docs.map(async productDoc => {\n          const productData = productDoc.data();\n          const priceSnapshot = await productDoc.ref.collection('prices').get();\n          const prices = priceSnapshot.docs.map(priceDoc => ({\n            priceId: priceDoc.id,\n            priceData: priceDoc.data()\n          }));\n          return {\n            id: productDoc.id,\n            data: productData,\n            prices: prices\n          };\n        });\n        const productsData = await Promise.all(promises);\n        setProducts(productsData);\n      } catch (error) {\n        console.log('Error fetching products:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plansScreen\",\n    children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: product.data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(PlansScreen, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = PlansScreen;\nexport default PlansScreen;\nvar _c;\n$RefreshReg$(_c, \"PlansScreen\");","map":{"version":3,"names":["React","useEffect","useState","db","jsxDEV","_jsxDEV","PlansScreen","_s","products","setProducts","fetchProducts","querySnapshot","collection","where","get","promises","docs","map","productDoc","productData","data","priceSnapshot","ref","prices","priceDoc","priceId","id","priceData","productsData","Promise","all","error","console","log","className","children","product","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/paridhipande/Desktop/netflix-clone/src/screens/PlansScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport db from \"../firebase\";\n\nfunction PlansScreen() {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const querySnapshot = await db\n          .collection('products')\n          .where('active', '==', true)\n          .get();\n\n        const promises = querySnapshot.docs.map(async (productDoc) => {\n          const productData = productDoc.data();\n          const priceSnapshot = await productDoc.ref.collection('prices').get();\n          const prices = priceSnapshot.docs.map((priceDoc) => ({\n            priceId: priceDoc.id,\n            priceData: priceDoc.data(),\n          }));\n\n          return {\n            id: productDoc.id,\n            data: productData,\n            prices: prices,\n          };\n        });\n\n        const productsData = await Promise.all(promises);\n        setProducts(productsData);\n      } catch (error) {\n        console.log('Error fetching products:', error);\n      }\n    };\n\n    fetchProducts();\n  }, []);\n\n  return (\n    <div className='plansScreen'>\n      {/* Render the component content */}\n      {products.map((product) => (\n        <div key={product.id}>\n          <h3>{product.data.title}</h3>\n          {/* Render product details or prices */}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default PlansScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,aAAa,GAAG,MAAMR,EAAE,CAC3BS,UAAU,CAAC,UAAU,CAAC,CACtBC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAC3BC,GAAG,CAAC,CAAC;QAER,MAAMC,QAAQ,GAAGJ,aAAa,CAACK,IAAI,CAACC,GAAG,CAAC,MAAOC,UAAU,IAAK;UAC5D,MAAMC,WAAW,GAAGD,UAAU,CAACE,IAAI,CAAC,CAAC;UACrC,MAAMC,aAAa,GAAG,MAAMH,UAAU,CAACI,GAAG,CAACV,UAAU,CAAC,QAAQ,CAAC,CAACE,GAAG,CAAC,CAAC;UACrE,MAAMS,MAAM,GAAGF,aAAa,CAACL,IAAI,CAACC,GAAG,CAAEO,QAAQ,KAAM;YACnDC,OAAO,EAAED,QAAQ,CAACE,EAAE;YACpBC,SAAS,EAAEH,QAAQ,CAACJ,IAAI,CAAC;UAC3B,CAAC,CAAC,CAAC;UAEH,OAAO;YACLM,EAAE,EAAER,UAAU,CAACQ,EAAE;YACjBN,IAAI,EAAED,WAAW;YACjBI,MAAM,EAAEA;UACV,CAAC;QACH,CAAC,CAAC;QAEF,MAAMK,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACf,QAAQ,CAAC;QAChDN,WAAW,CAACmB,YAAY,CAAC;MAC3B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;MAChD;IACF,CAAC;IAEDrB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAK6B,SAAS,EAAC,aAAa;IAAAC,QAAA,EAEzB3B,QAAQ,CAACS,GAAG,CAAEmB,OAAO,iBACpB/B,OAAA;MAAA8B,QAAA,eACE9B,OAAA;QAAA8B,QAAA,EAAKC,OAAO,CAAChB,IAAI,CAACiB;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC,GADrBL,OAAO,CAACV,EAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGf,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClC,EAAA,CA/CQD,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AAiDpB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}