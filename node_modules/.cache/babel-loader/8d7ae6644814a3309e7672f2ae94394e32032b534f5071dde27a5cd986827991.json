{"ast":null,"code":"import _regeneratorRuntime from\"/Users/paridhipande/Desktop/netflix-clone/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/paridhipande/Desktop/netflix-clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/paridhipande/Desktop/netflix-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import'./Row.css';import axios from'./axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,_ref$isLargeRow=_ref.isLargeRow,isLargeRow=_ref$isLargeRow===void 0?false:_ref$isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var base_url='https://image.tmdb.org/t/p/original/';useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var request;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row__posters\",children:movies.map(function(movie){return(isLargeRow&&movie.poster_path||!isLargeRow&&movie.backdrop_path)&&/*#__PURE__*/_jsx(\"img\",{className:\"row__poster \".concat(isLargeRow&&\"row__posterLarge\"),src:\"\".concat(base_url).concat(isLargeRow?movie.poster_path:movie.backdrop_path,\"\\n                \"),alt:movie.name},movie.id);})})]});}export default Row;","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","Row","_ref","title","fetchUrl","_ref$isLargeRow","isLargeRow","_useState","_useState2","_slicedToArray","movies","setMovies","base_url","fetchData","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","wrap","_callee$","_context","prev","next","get","sent","data","results","abrupt","stop","className","children","map","movie","poster_path","backdrop_path","concat","src","alt","name","id"],"sources":["/Users/paridhipande/Desktop/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './Row.css'\nimport axios from './axios';\n\n\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\n\n    const [movies, setMovies] = useState([]);\n    const base_url = 'https://image.tmdb.org/t/p/original/';\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n\n    return (\n        <div className='row'>\n            <h2>{title}</h2>\n            <div className='row__posters'>\n\n                {movies.map(\n                    (movie) => ((isLargeRow && movie.poster_path) || (!isLargeRow && movie.backdrop_path)) && (\n                            <img\n                                className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                                key={movie.id}\n                                src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path\n                                    }\n                `} alt={movie.name} />\n                        )\n\n\n\n                    )}\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default Row;"],"mappings":"6YAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,WAAW,CAClB,MAAO,CAAAC,KAAK,KAAM,SAAS,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAG5B,QAAS,CAAAC,GAAGA,CAAAC,IAAA,CAA0C,IAAvC,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CAAEC,QAAQ,CAAAF,IAAA,CAARE,QAAQ,CAAAC,eAAA,CAAAH,IAAA,CAAEI,UAAU,CAAVA,UAAU,CAAAD,eAAA,UAAG,KAAK,CAAAA,eAAA,CAE9C,IAAAE,SAAA,CAA4BZ,QAAQ,CAAC,EAAE,CAAC,CAAAa,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjCG,MAAM,CAAAF,UAAA,IAAEG,SAAS,CAAAH,UAAA,IACxB,GAAM,CAAAI,QAAQ,CAAG,sCAAsC,CACvDlB,SAAS,CAAC,UAAM,SACG,CAAAmB,SAASA,CAAA,SAAAC,UAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,WAAA,EAAAA,UAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAxB,SAAAC,QAAA,MAAAC,OAAA,QAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SAC0B,CAAA9B,KAAK,CAAC+B,GAAG,CAACvB,QAAQ,CAAC,QAAnCiB,OAAO,CAAAG,QAAA,CAAAI,IAAA,CACbjB,SAAS,CAACU,OAAO,CAACQ,IAAI,CAACC,OAAO,CAAC,CAAC,OAAAN,QAAA,CAAAO,MAAA,UACzBV,OAAO,0BAAAG,QAAA,CAAAQ,IAAA,MAAAZ,OAAA,GACjB,UAAAN,UAAA,CAAAC,KAAA,MAAAC,SAAA,GACDH,SAAS,CAAC,CAAC,CACf,CAAC,CAAE,CAACT,QAAQ,CAAC,CAAC,CAGd,mBACIJ,KAAA,QAAKiC,SAAS,CAAC,KAAK,CAAAC,QAAA,eAChBpC,IAAA,OAAAoC,QAAA,CAAK/B,KAAK,CAAK,CAAC,cAChBL,IAAA,QAAKmC,SAAS,CAAC,cAAc,CAAAC,QAAA,CAExBxB,MAAM,CAACyB,GAAG,CACP,SAACC,KAAK,QAAK,CAAE9B,UAAU,EAAI8B,KAAK,CAACC,WAAW,EAAM,CAAC/B,UAAU,EAAI8B,KAAK,CAACE,aAAc,gBAC7ExC,IAAA,QACImC,SAAS,gBAAAM,MAAA,CAAiBjC,UAAU,EAAI,kBAAkB,CAAG,CAE7DkC,GAAG,IAAAD,MAAA,CAAK3B,QAAQ,EAAA2B,MAAA,CAAGjC,UAAU,CAAG8B,KAAK,CAACC,WAAW,CAAGD,KAAK,CAACE,aAAa,sBAErF,CAACG,GAAG,CAAEL,KAAK,CAACM,IAAK,EAHEN,KAAK,CAACO,EAGN,CACZ,EAIL,CAAC,CACJ,CAAC,EAEL,CAAC,CAGd,CAEA,cAAe,CAAA1C,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}