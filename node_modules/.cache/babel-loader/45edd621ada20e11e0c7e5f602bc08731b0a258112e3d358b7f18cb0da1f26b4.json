{"ast":null,"code":"var _jsxFileName = \"/Users/paridhipande/Desktop/netflix-clone/src/screens/PlansScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport db from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlansScreen() {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    db.collection('products').where('active', '==', true).get().then(querySnapshot => {\n      const fetchedProducts = {};\n      querySnapshot.forEach(async productDoc => {\n        fetchedProducts[productDoc.id] = productDoc.data();\n        const priceSnap = await productDoc.ref.collection('prices').get();\n        priceSnap.docs.forEach(price => {\n          fetchedProducts[productDoc.id].prices = {\n            priceId: price.id,\n            priceData: price.data()\n          };\n        });\n      });\n      setProducts(fetchedProducts);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plansScreen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(PlansScreen, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = PlansScreen;\nexport default PlansScreen;\nvar _c;\n$RefreshReg$(_c, \"PlansScreen\");","map":{"version":3,"names":["React","useEffect","useState","db","jsxDEV","_jsxDEV","PlansScreen","_s","products","setProducts","collection","where","get","then","querySnapshot","fetchedProducts","forEach","productDoc","id","data","priceSnap","ref","docs","price","prices","priceId","priceData","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/paridhipande/Desktop/netflix-clone/src/screens/PlansScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport  db  from \"../firebase\";\n\nfunction PlansScreen() {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    db.collection('products')\n      .where('active', '==', true)\n      .get()\n      .then((querySnapshot) => {\n        const fetchedProducts = {};\n        querySnapshot.forEach(async (productDoc) => {\n          fetchedProducts[productDoc.id] = productDoc.data();\n          const priceSnap = await productDoc.ref.collection('prices').get();\n          priceSnap.docs.forEach((price) => {\n            fetchedProducts[productDoc.id].prices = {\n              priceId: price.id,\n              priceData: price.data(),\n            };\n          });\n        });\n        setProducts(fetchedProducts);\n      });\n  }, []);\n\n  return (\n    <div className='plansScreen'>\n      {/* Render the products or perform other operations */}\n    </div>\n  );\n}\n\nexport default PlansScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAQC,EAAE,MAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdE,EAAE,CAACO,UAAU,CAAC,UAAU,CAAC,CACtBC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAC3BC,GAAG,CAAC,CAAC,CACLC,IAAI,CAAEC,aAAa,IAAK;MACvB,MAAMC,eAAe,GAAG,CAAC,CAAC;MAC1BD,aAAa,CAACE,OAAO,CAAC,MAAOC,UAAU,IAAK;QAC1CF,eAAe,CAACE,UAAU,CAACC,EAAE,CAAC,GAAGD,UAAU,CAACE,IAAI,CAAC,CAAC;QAClD,MAAMC,SAAS,GAAG,MAAMH,UAAU,CAACI,GAAG,CAACX,UAAU,CAAC,QAAQ,CAAC,CAACE,GAAG,CAAC,CAAC;QACjEQ,SAAS,CAACE,IAAI,CAACN,OAAO,CAAEO,KAAK,IAAK;UAChCR,eAAe,CAACE,UAAU,CAACC,EAAE,CAAC,CAACM,MAAM,GAAG;YACtCC,OAAO,EAAEF,KAAK,CAACL,EAAE;YACjBQ,SAAS,EAAEH,KAAK,CAACJ,IAAI,CAAC;UACxB,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,CAAC;MACFV,WAAW,CAACM,eAAe,CAAC;IAC9B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAKsB,SAAS,EAAC;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvB,CAAC;AAEV;AAACxB,EAAA,CA5BQD,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AA8BpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}