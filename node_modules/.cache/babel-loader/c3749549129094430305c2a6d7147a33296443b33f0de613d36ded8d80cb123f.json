{"ast":null,"code":"var _jsxFileName = \"/Users/paridhipande/Desktop/netflix-clone/src/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Row.css';\nimport axios from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Row(_ref) {\n  _s();\n  let {\n    title,\n    fetchUrl,\n    isLargeRow = false\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const base_url = 'https://image.tmdb.org/t/p/original/';\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => (isLargeRow && movie.poster_path || !isLargeRow && movie.backdrop_path) && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}\n                `,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Row","_ref","_s","title","fetchUrl","isLargeRow","movies","setMovies","base_url","fetchData","request","get","data","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","poster_path","backdrop_path","src","alt","name","id","_c","$RefreshReg$"],"sources":["/Users/paridhipande/Desktop/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './Row.css'\nimport axios from './axios';\n\n\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\n\n    const [movies, setMovies] = useState([]);\n    const base_url = 'https://image.tmdb.org/t/p/original/';\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n\n    return (\n        <div className='row'>\n            <h2>{title}</h2>\n            <div className='row__posters'>\n\n                {movies.map(\n                    (movie) => ((isLargeRow && movie.poster_path) || (!isLargeRow && movie.backdrop_path)) && (\n                            <img\n                                className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                                key={movie.id}\n                                src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path\n                                    }\n                `} alt={movie.name} />\n                        )\n\n\n\n                    )}\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default Row;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5B,SAASC,GAAGA,CAAAC,IAAA,EAA0C;EAAAC,EAAA;EAAA,IAAzC;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,UAAU,GAAG;EAAM,CAAC,GAAAJ,IAAA;EAEhD,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMY,QAAQ,GAAG,sCAAsC;EACvDb,SAAS,CAAC,MAAM;IACZ,eAAec,SAASA,CAAA,EAAG;MACvB,MAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACP,QAAQ,CAAC;MACzCG,SAAS,CAACG,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IAClB;IACAD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAGd,oBACIL,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBhB,OAAA;MAAAgB,QAAA,EAAKZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBpB,OAAA;MAAKe,SAAS,EAAC,cAAc;MAAAC,QAAA,EAExBT,MAAM,CAACc,GAAG,CACNC,KAAK,IAAK,CAAEhB,UAAU,IAAIgB,KAAK,CAACC,WAAW,IAAM,CAACjB,UAAU,IAAIgB,KAAK,CAACE,aAAc,kBAC7ExB,OAAA;QACIe,SAAS,EAAG,eAAcT,UAAU,IAAI,kBAAmB,EAAE;QAE7DmB,GAAG,EAAG,GAAEhB,QAAS,GAAEH,UAAU,GAAGgB,KAAK,CAACC,WAAW,GAAGD,KAAK,CAACE,aACrD;AACrC,iBAAkB;QAACE,GAAG,EAAEJ,KAAK,CAACK;MAAK,GAHEL,KAAK,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGR,CAKjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAGd;AAACjB,EAAA,CArCQF,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}