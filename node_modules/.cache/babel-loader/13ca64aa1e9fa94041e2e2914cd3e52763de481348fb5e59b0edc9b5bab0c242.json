{"ast":null,"code":"var _jsxFileName = \"/Users/paridhipande/Desktop/netflix-clone/src/screens/PlansScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport db from \"../firebase\";\nimport './PlansScreen.css';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../features/counter/userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlansScreen() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const user = useSelector(selectUser);\n  useEffect(() => {\n    db.collection('products').where('active', '==', true).get().then(querySnapshot => {\n      const products = {};\n      querySnapshot.forEach(async productDoc => {\n        products[productDoc.id] = productDoc.data();\n        const priceSnap = await productDoc.ref.collection('prices').get();\n        priceSnap.docs.forEach(price => {\n          products[productDoc.id].prices = {\n            priceId: price.id,\n            priceData: price.data()\n          };\n        });\n      });\n      setProducts(products);\n    });\n  }, []);\n  console.log(products);\n  const loadCheckout = async priceId => {\n    const docRef = await db.collection('customers').doc(user.uid).collection(\"checkout_sessions\").add({\n      price: priceId,\n      success_url: window.location.origin,\n      cancel_url: window.location.origin\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plansScreen\",\n    children: Object.entries(products).map(_ref => {\n      let [productId, productData] = _ref;\n      // add some logic to check if user subscriptions is active\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plansScreen__plan\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plansScreen__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: productData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: productData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => loadCheckout(productData.prices.priceId),\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(PlansScreen, \"nuatpq5LhrWF8CWFG6V8/grvPqY=\", false, function () {\n  return [useSelector];\n});\n_c = PlansScreen;\nexport default PlansScreen;\nvar _c;\n$RefreshReg$(_c, \"PlansScreen\");","map":{"version":3,"names":["React","useEffect","useState","db","useSelector","selectUser","jsxDEV","_jsxDEV","PlansScreen","_s","products","setProducts","user","collection","where","get","then","querySnapshot","forEach","productDoc","id","data","priceSnap","ref","docs","price","prices","priceId","priceData","console","log","loadCheckout","docRef","doc","uid","add","success_url","window","location","origin","cancel_url","className","children","Object","entries","map","_ref","productId","productData","name","fileName","_jsxFileName","lineNumber","columnNumber","description","onClick","_c","$RefreshReg$"],"sources":["/Users/paridhipande/Desktop/netflix-clone/src/screens/PlansScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport db from \"../firebase\"\nimport './PlansScreen.css'\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../features/counter/userSlice';\n\nfunction PlansScreen() {\n    const [products, setProducts] = useState([]);\n    const user = useSelector(selectUser);\n    useEffect(() => {\n        db.collection('products').where('active', '==',true).get().then((querySnapshot) => {\n            const products = {};\n            querySnapshot.forEach(async productDoc => {\n                products[productDoc.id] = productDoc.data();\n                const priceSnap = await productDoc.ref.collection('prices').get();\n                priceSnap.docs.forEach(price => {\n                    products[productDoc.id].prices = {\n                        priceId: price.id,\n                        priceData: price.data(),\n\n                    \n                };\n            });\n        });\n        setProducts(products);\n    });\n},[]);\nconsole.log(products);\nconst loadCheckout = async(priceId) => {\n    const docRef =  await db.collection('customers').doc(user.uid).collection(\"checkout_sessions\").add({\n        price: priceId,\n        success_url: window.location.origin,\n        cancel_url:window.location.origin,\n    });\n};\n\n     \n  return (\n    <div className='plansScreen'>\n    {Object.entries(products).map(([productId,productData]) => {\n        // add some logic to check if user subscriptions is active\n        return(\n            <div className='plansScreen__plan'>\n            <div className = 'plansScreen__info'>\n                <h5>{productData.name}</h5>\n                <h6>{productData.description}</h6>\n            </div>\n            <button onClick ={() => loadCheckout(productData.prices.priceId)}>\n                Subscribe\n            </button>\n\n            </div>\n        );\n    }\n    )}\n\n    </div>\n  )\n}\n\nexport default PlansScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}