{"ast":null,"code":"var _jsxFileName = \"/Users/paridhipande/Desktop/netflix-clone/src/screens/PlansScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlansScreen() {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    db.collection('products').where('active', '==', true).get().then(querySnapshot => {\n      const products = {};\n      querySnapshot.forEach(async productDoc => {\n        products[productDoc.id] = productDoc.data();\n        const priceSnap = await productDoc.ref.collection('prices').get();\n        priceSnap.docs.forEach(price => {\n          products[productDoc.id].prices = {\n            priceId: price.id,\n            priceData: price.data()\n          };\n        });\n      });\n      setProducts(products);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plansScreen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(PlansScreen, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = PlansScreen;\nexport default PlansScreen;\nvar _c;\n$RefreshReg$(_c, \"PlansScreen\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PlansScreen","_s","products","setProducts","db","collection","where","get","then","querySnapshot","forEach","productDoc","id","data","priceSnap","ref","docs","price","prices","priceId","priceData","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/paridhipande/Desktop/netflix-clone/src/screens/PlansScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nfunction PlansScreen() {\n    const [products, setProducts] = useState([]);\n    useEffect(() => {\n        db.collection('products').where('active', '==',true)\n        .get().then((querySnapshot) => {\n            const products = {};\n            querySnapshot.forEach(async productDoc => {\n                products[productDoc.id] = productDoc.data();\n                const priceSnap = await productDoc.ref.\n                collection('prices').get();\n                priceSnap.docs.forEach(price => {\n                    products[productDoc.id].prices = {\n                        priceId: price.id,\n                        priceData: price.data(),\n\n                    \n                };\n            });\n        });\n        setProducts(products);\n    });\n},[]);\n\n     \n  return (\n    <div className='plansScreen'>\n\n    </div>\n  )\n}\n\nexport default PlansScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5CD,SAAS,CAAC,MAAM;IACZQ,EAAE,CAACC,UAAU,CAAC,UAAU,CAAC,CAACC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAC,IAAI,CAAC,CACnDC,GAAG,CAAC,CAAC,CAACC,IAAI,CAAEC,aAAa,IAAK;MAC3B,MAAMP,QAAQ,GAAG,CAAC,CAAC;MACnBO,aAAa,CAACC,OAAO,CAAC,MAAMC,UAAU,IAAI;QACtCT,QAAQ,CAACS,UAAU,CAACC,EAAE,CAAC,GAAGD,UAAU,CAACE,IAAI,CAAC,CAAC;QAC3C,MAAMC,SAAS,GAAG,MAAMH,UAAU,CAACI,GAAG,CACtCV,UAAU,CAAC,QAAQ,CAAC,CAACE,GAAG,CAAC,CAAC;QAC1BO,SAAS,CAACE,IAAI,CAACN,OAAO,CAACO,KAAK,IAAI;UAC5Bf,QAAQ,CAACS,UAAU,CAACC,EAAE,CAAC,CAACM,MAAM,GAAG;YAC7BC,OAAO,EAAEF,KAAK,CAACL,EAAE;YACjBQ,SAAS,EAAEH,KAAK,CAACJ,IAAI,CAAC;UAG9B,CAAC;QACL,CAAC,CAAC;MACN,CAAC,CAAC;MACFV,WAAW,CAACD,QAAQ,CAAC;IACzB,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAGH,oBACEH,OAAA;IAAKsB,SAAS,EAAC;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvB,CAAC;AAEV;AAACxB,EAAA,CA7BQD,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AA+BpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}